<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.loadingwork.mvc</groupId>
	<artifactId>security-spring-mvc</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>


	<!-- 全局属性配置 -->
	<profiles>
		<!-- 开发环境 -->
		<profile>
			<id>dev</id>
			<properties>
				<!-- 部署环境(对应配置文件版本) -->
				<env>dev</env>
			</properties>
			<!-- 设置默认环境 -->
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<!-- 部署环境 -->
		<profile>
			<id>release</id>
			<properties>
				<!-- 部署环境(对应配置文件版本) -->
				<env>release</env>
			</properties>
		</profile>
		<!-- 测试环境 -->
		<profile>
			<id>test</id>
			<properties>
				<!-- 部署环境(对应配置文件版本) -->
				<env>test</env>
			</properties>
		</profile>
	</profiles>

	<!-- 配置文件 -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		
		<spring-security.version>5.0.11.RELEASE</spring-security.version>
		<docker.image.prefix>mvc</docker.image.prefix>
		
		<mysql.version>5.1.46</mysql.version>
		<mapper.version>4.1.5</mapper.version>
	</properties>

	<!-- 添加项目仓库位置 -->
	<repositories>

		<!-- 阿里云 -->
		<repository>
			<id>io.aliyun</id>
			<url>https://maven.aliyun.com/repository/central</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<!-- spring地址 -->
		<repository>
			<id>io.spring.repo.maven.release</id>
			<url>http://repo.spring.io/release/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<!-- @TODO 忘了以后再加 -->


	</repositories>

	<dependencyManagement>

		<dependencies>
		
			<!-- spring 框架  -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-framework-bom</artifactId>
				<version>5.0.12.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			
			<!-- spring data jpa -->
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-releasetrain</artifactId>
				<version>Ingalls-SR18</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			
		</dependencies>

	</dependencyManagement>

	<!-- 依赖 -->
	<dependencies>
		<!-- servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>
		<!-- jstl -->
		<dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <version>2.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>

		<!-- spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<!-- aop -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
		</dependency>
		<!-- 切面 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
		</dependency>
		
		<!-- xml -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
		</dependency>


		<!-- spring security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring-security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring-security.version}</version>
		</dependency>
		
		<!-- log包   -->
		<!-- 使用logback实现, 所有log使用slf4j -->
		<dependency>
		    <groupId>commons-logging</groupId>
		    <artifactId>commons-logging</artifactId>
		    <version>1.2</version>
		</dependency>
		<dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>slf4j-api</artifactId>
		    <version>1.7.26</version>
		</dependency>
		<!-- commons-logging log转成 slf4j -->
		<dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>jcl-over-slf4j</artifactId>
		    <version>1.7.26</version>
		</dependency>
		<!-- java.util.logging 转 slf4j  -->
		<dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>jul-to-slf4j</artifactId>
		    <version>1.7.26</version>
		</dependency>
		<!-- log4j转slf4j -->
		<dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>log4j-over-slf4j</artifactId>
		    <version>1.7.26</version>
		</dependency>
		<dependency>
		    <groupId>ch.qos.logback</groupId>
		    <artifactId>logback-core</artifactId>
		    <version>1.2.3</version>
		</dependency>
		<dependency>
		    <groupId>ch.qos.logback</groupId>
		    <artifactId>logback-classic</artifactId>
		    <version>1.2.3</version>
		</dependency>
		<dependency>
		    <groupId>net.logstash.logback</groupId>
		    <artifactId>logstash-logback-encoder</artifactId>
		    <version>5.3</version>
		</dependency>



		<!-- 测试包 -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-test</artifactId>
		    <scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>junit</groupId>
		    <artifactId>junit</artifactId>
		    <version>4.12</version>
		    <scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<version>${spring-security.version}</version>
			<scope>test</scope>
		</dependency>
		
		
		<!-- 数据库驱动包 -->
		<dependency>
		    <groupId>mysql</groupId>
		    <artifactId>mysql-connector-java</artifactId>
		    <version>${mysql.version}</version>
		</dependency>
		
		
		
		<!-- 数据源 -->
		
		<!-- spring-datasource-druid.xml  -->
		<dependency>
		     <groupId>com.alibaba</groupId>
		     <artifactId>druid</artifactId>
		     <version>1.1.12</version>
		</dependency>
		
		<!-- spring-datasource-bonecp.xml -->
		<dependency>
		    <groupId>com.jolbox</groupId>
		    <artifactId>bonecp</artifactId>
		    <version>0.8.0.RELEASE</version>
		</dependency>
		<dependency>
		    <groupId>com.jolbox</groupId>
		    <artifactId>bonecp-spring</artifactId>
		    <version>0.8.0.RELEASE</version>
		</dependency>
		<dependency>
		    <groupId>com.google.guava</groupId>
		    <artifactId>guava</artifactId>
		    <version>23.0</version>
		</dependency>
		
		
		<!-- spring-datasource-c3p0.xml -->
		<dependency>
		    <groupId>com.mchange</groupId>
		    <artifactId>c3p0</artifactId>
		    <version>0.9.5.3</version>
		</dependency>
		
		<!-- spring-datasource-dbcp1.xml -->
		<dependency>
		    <groupId>commons-dbcp</groupId>
		    <artifactId>commons-dbcp</artifactId>
		    <version>1.4</version>
		</dependency>
		
		<!-- spring-datasource-dbcp2.xml -->
		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-dbcp2</artifactId>
		    <version>2.6.0</version>
		</dependency>
		
		<!-- spring-datasource-hikaricp.xml -->
		<dependency>
	        <groupId>com.zaxxer</groupId>
	        <artifactId>HikariCP</artifactId>
	        <version>3.3.1</version>
	    </dependency>
		
		<!-- spring-datasource-proxool.xml  -->
		<dependency>
		    <groupId>com.cloudhopper.proxool</groupId>
		    <artifactId>proxool</artifactId>
		    <version>0.9.1</version>
		</dependency>
		
		
		<!-- spring-datasource-vibur-dbcp.xml -->
		<dependency>
		    <groupId>org.vibur</groupId>
		    <artifactId>vibur-dbcp</artifactId>
		    <version>22.2</version>
		</dependency>
		<dependency>
		    <groupId>com.googlecode.concurrentlinkedhashmap</groupId>
		    <artifactId>concurrentlinkedhashmap-lru</artifactId>
		    <version>1.4.2</version>
		</dependency>
		
		<!-- /数据源 -->
		
		
		<!-- jdbc -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
		</dependency>
		
		<!-- hibernate -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.hibernate</groupId>
		    <artifactId>hibernate-core</artifactId>
		    <version>5.2.18.Final</version>
		</dependency>
		
		<!-- spring data jpa -->
		<dependency>
		    <groupId>org.springframework.data</groupId>
		    <artifactId>spring-data-jpa</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.hibernate</groupId>
		    <artifactId>hibernate-entitymanager</artifactId>
		    <version>5.2.18.Final</version>
		</dependency>
		
		<!-- mybatis -->
		<!-- 
		由于mybatis-plus需要mybatis-spring V2.0.0版本
		<dependency>
		  <groupId>org.mybatis</groupId>
		  <artifactId>mybatis-spring</artifactId>
		  <version>1.3.2</version>
		</dependency>
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis</artifactId>
		    <version>3.4.6</version>
		</dependency>
		 -->
		<dependency>
		  <groupId>org.mybatis</groupId>
		  <artifactId>mybatis-spring</artifactId>
		  <version>2.0.0</version>
		</dependency>
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis</artifactId>
		    <version>3.5.0</version>
		</dependency>
		
		<!-- mybatis plus -->
		<dependency>
		    <groupId>com.baomidou</groupId>
		    <artifactId>mybatis-plus</artifactId>
		    <version>3.1.0</version>
		</dependency>
		
		
		<!-- tk.mybatis -->
		<dependency>
		    <groupId>tk.mybatis</groupId>
		    <artifactId>mapper</artifactId>
		    <version>${mapper.version}</version>
		</dependency>
		<dependency>
		    <groupId>com.github.pagehelper</groupId>
		    <artifactId>pagehelper</artifactId>
		    <version>5.1.8</version>
		</dependency>
		
		<!-- eclipselink -->
		<dependency>
		    <groupId>org.eclipse.persistence</groupId>
		    <artifactId>eclipselink</artifactId>
		    <version>2.7.4</version>
		</dependency>
		<dependency>
		    <groupId>org.eclipse.persistence</groupId>
		    <artifactId>org.eclipse.persistence.jpa</artifactId>
		    <version>2.7.4</version>
		</dependency>
		
		<!-- beetl  -->
		<dependency>
	        <groupId>com.ibeetl</groupId>
	        <artifactId>beetl</artifactId>
	        <version>2.9.3</version>
		</dependency>
		<dependency>
		    <groupId>com.ibeetl</groupId>
		    <artifactId>beetlsql</artifactId>
		    <version>2.11.1</version>
		</dependency>
		
		
		
		<!-- /jdbc -->
		
		
		<!-- 代码生成器 -->
		<dependency>
            <groupId>org.mybatis.generator</groupId>
            <artifactId>mybatis-generator-core</artifactId>
            <version>1.3.7</version>
            <optional>true</optional>
        </dependency>
		
		<!-- /代码生成器 -->
		
		
		

	</dependencies>



	<!-- 编译配置 -->
	<build>
		<finalName>${project.artifactId}-${env}</finalName>


		<!-- 资源处理 -->
		<resources>
			<!-- 先指定 src/main/resources下所有文件及文件夹为资源文件 关闭这个目录下的变量替换 -->
			<resource>
				<directory>src/main/resources</directory>
				<targetPath>${project.build.directory}/classes</targetPath>
				<includes>
					<include>**/*.xml</include>
					<include>**/*.properties</include>
					<include>**/*.xsd</include>
					<include>**/*.dic</include>
					<include>**/*.ttc</include>
					<include>**/*.ftl</include>
				</includes>
				<filtering>false</filtering>
			</resource>

			<!-- 修改为根据env部署环境值，把对应环境的配置文件拷贝到classes目录 开启变量替换 如 : ${env} -->
			<resource>
				<directory>deploy/${env}</directory>
				<targetPath>${project.build.directory}/classes</targetPath>
				<filtering>true</filtering>
			</resource>

		</resources>

		<pluginManagement>
			<plugins>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.0</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>


			</plugins>
		</pluginManagement>

		<plugins>
			<!-- 编译 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<!-- 没有版本号, 也不用插件管理就会使用本地仓库中最新的 -->
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>

			<!-- 资源 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
			</plugin>
			
			<plugin>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-maven-plugin</artifactId>
                <version>1.3.7</version>
                <configuration>
                    <configurationFile>${basedir}/src/main/resources/generator/generatorConfig.xml</configurationFile>
                    <overwrite>false</overwrite>
                    <verbose>true</verbose>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>${mysql.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>tk.mybatis</groupId>
                        <artifactId>mapper</artifactId>
                        <version>${mapper.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

		</plugins>

	</build>

</project>